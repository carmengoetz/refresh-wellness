
{% extends 'base.html.twig' %}

{% block title %}Conversations{% endblock %}

{% block stylesheets %}
{{ parent() }}
	<!-- Style sheet for displaying messages-->
    <link type="text/css" rel="stylesheet" href="../../../styles/view_messages.css" />

{% endblock %}

{% block javascripts %}
<!-- scripts for jquery and knockout-->



<!--bubble thing for the background-->
<script async type="text/javascript" src="../../../scripts/background.js"></script>

<!-- viewmodel script. most of the functionality will be found here-->
<script type="text/javascript">
	//variable for resizing the screen size (desktop or mobile)
	var resizing;

	//Used to stop making ajax calls if we are at the end of the returned data
	var loadMore = true;

	//booleans to help with screen sizing
	var isDesktop = false;
	var prevScreen = false;

	//function to check if the the screen width is akin to being used on a desktop
	function checkDesktop() {
		prevScreen = isDesktop;
		isDesktop = $(window).width() > 992;
	}

	//Used to determine if arrows should be displayed
	var showNext = false;

    //Variable to decide which page to show
    var pageNum = 1;

    //Make AJAX call to conversation controller to get list of conversations
    var viewModel = {


        conversations: ko.observableArray(),

        //recreate the function to work with the json passed in above
		getConvos: function () {
			//If there is more to load and the function is called hide the conversations and pagination
			//And display the loading pineapple
			if (loadMore) {
				//only do this part if in desktop view
				if ($(window).width() >= 992) {
					hideNextArrows();
					hidePrevArrows();
					$('#convoBox').hide();
				}
				$("#loading").show();
			}
			//Check for next nav arrows
            

                $.ajax(
                    {
                        url: '../conversation/view/' + (pageNum + 1),
                        type: 'GET',
                        dataType: 'json',
                        success: function (jsonResponse) {
                            
                            //next page button is showing when there is not more to show. need to fix
                            if (jsonResponse.data.length != 0) {
                                showNext = true;
                                loadMore = true;
                            }
                            else {
                                showNext = false;
                                loadMore = false;
                            }
                        }
                    })

            
			//if there is more conversations to load
            console.log(loadMore);
			if (loadMore) {
				$.ajax(
					{
						url: '../conversation/view/' + pageNum,
						type: 'GET',
						dataType: 'json',

						success: function (jsonResponse) {
							//Deal with the response
							if (jsonResponse.status == "success" && jsonResponse.data.length != 0) {
								//hide the pineapple loading thing
								$("#loading").hide();

                                

                                

                                //End relationships
								if ($(window).width() >= 992) {
									viewModel.conversations.removeAll();
								}
								for (var i = 0; i < jsonResponse.data.length; i++) {
									//take off the seconds so that the time displays only as hours and minutes
									jsonResponse.data[i].lastMessage.time = jsonResponse.data[i].lastMessage.time.substring(0, jsonResponse.data[i].lastMessage.time.length - 3);

									//Making sure the message preview is no longer than 50 characters
									var messageContents = jsonResponse.data[i].lastMessage.messageContent;
									if (messageContents.length > 50) {
										jsonResponse.data[i].lastMessage.messageContent = jsonResponse.data[i].lastMessage.messageContent.substring(0, 50) + "...";
									}


									//Adding the conversation to the viewmodel
									viewModel.conversations.push(jsonResponse.data[i]);
								}

                                

							}
							else if (jsonResponse.status == "success" && jsonResponse.data.length == 0)
							{
								$("#msgContainer").hide();
								$("#loading").hide();
								$('.noConvoMsg').show();
							}
							//jsonResponse status is failure
							else {
								//display the error message
								$("#loading").hide();
								$('#jsonError').html(jsonResponse.message);
								if ($('#jsonError').text() != "Invalid page request") {
									$('#msgContainer').hide();
									$(".errorMsg").css("display", "inline-block");
								}
							}
							//Decide if the next page nav arrow should be displayed
							if (showNext) {
								showNextArrows();
							}
							else {
								hideNextArrows();
							}
							//Decide if the previous page nav arrows should be displayed
							if (pageNum > 1) {
								showPrevArrows();
							}
							else {
								hidePrevArrows();
							}
						}
					})
            }


        },

		//opens messages page when a conversation is clicked
        openConvo: function (conversations) {
            sessionStorage.setItem("userID", conversations.userID);
            sessionStorage.setItem("fullname", conversations.userName);
            open('../message/viewmessages', '_self');
        }

    };

	//once all ajax calls are complete, show an open envelope if the message is read,
	//show a closed envelope if the message is not read
    $(document).ajaxComplete(function () {
        $(".read").each(function (i) {
            if ($(this).text() == 'true') {
                $(this).text('');
                $(this).addClass("fa fa-envelope-open");
            }
            else {
                $(this).text('');
                $(this).addClass("fa fa-envelope");
            }
        });
		//Show the conversations after everything is loaded
        $('#convoBox').show();
    });

    //Add method to determine if navigation arrows are needed

	//Used to show the next arrow
    function showNextArrows()
	{
		$("#nextPage").show();
		$("#pagination-holder").addClass("d-lg-block");
	}
	//Used to hide the next arrow when there are no more pages to load
	function hideNextArrows()
	{
		$("#nextPage").hide();
		if (!showNext && pageNum <= 1) {
			$("#pagination-holder").removeClass("d-lg-block");
		}
	}

	//used to show the previous arrow
	function showPrevArrows()
	{
		$("#prevPage").show();
		$("#pagination-holder").addClass("d-lg-block");
	}

	//used to hide the previous arrow when on the first page
	function hidePrevArrows()
	{
		$("#prevPage").hide();
		if (!showNext && pageNum <= 1) {
			$("#pagination-holder").removeClass("d-lg-block");
		}
	}

    $(function () {

        newConversation = true;


        ko.applyBindings(viewModel);
        viewModel.getConvos();

        $("#nextPage").hide();
        $("#prevPage").hide();

        //Click handler for next
        $("#nextPage").click(function () {
            pageNum++;
            viewModel.getConvos();
        });

        //Click handler for prev
        $("#prevPage").click(function () {
            pageNum--;

            loadMore = true;

            viewModel.getConvos();
        });

        
    });

    function sendMessage() {
        $('#recipient-name').text("Send a message to " + $('#select-recipient option:selected').text() + ":");
        recieverGuid = $('#select-recipient').val();
        senderGuid = '{{ params.self }}';


    }




  //


    
</script>
<!-- Script to handle infinite scroll for mobile view  -->
<script>
    $(window).resize(function () {

        

		clearTimeout(resizing);
		resizing = setTimeout(function () {
			checkDesktop();
			if (prevScreen != isDesktop) {
				viewModel.conversations.removeAll();
				pageNum = 1;
				loadMore = true;
				viewModel.getConvos();
			}
		
		}, 1000);

		//don't show headings in the mobile view
		if ($(window).width() < 580) {
			$("#headings").hide();
		} else {
			$("#headings").show();
		}

		});
		checkDesktop();

	//Function checks to see if we are at the bottom of the page
	//Will used the returned value to determine whether or not to load more conversations
	function getDocHeight() {
    var D = document;
    return Math.max(
        D.body.scrollHeight, D.documentElement.scrollHeight,
        D.body.offsetHeight, D.documentElement.offsetHeight,
        D.body.clientHeight, D.documentElement.clientHeight
    );
	}

	//Function is called when the page is scrolled to check if the page has
	//been scrolled to the bottom in mobile view.
	$(window).scroll(function () {
		if ($(window).width() < 992) {
			if ($(window).scrollTop() + $(window).height() == getDocHeight()) {
			   pageNum++;
			viewModel.getConvos();
		   }
		}
   });

    

</script>
{% endblock %}

{% block body %}


		<div id="mainWrapper" class="col-md-12 col-lg-7">



        <!-- Add heading for messages-->
			<div id="headerText" class="row rounded bg-light mb-3 p-2 pl-3">
				<h1>Conversations</h1>

			</div>


        <div id="new-message" class="row rounded bg-light mb-1" >
          
                    <select data-placeholder="Select recipient..." class="chosen-select col-sm-6 m-1 " style="padding-top: 1em;" id="select-recipient">
                        <option></option>
                        {% for rel in params.relationships %}
                            <option value="{{ rel.guid }}">{{ rel.fullname }}</option>
                        {% endfor %}
            
                    </select>

                    <button onclick="sendMessage()" id="send-message" class="send-message btn btn-info col-sm-3 m-1 control-panel-button" disabled data-toggle="modal" data-target="#send-message-modal"><span class="fa fa-envelope-o mr-3"></span>New message</button>
                
                </div>
        <!-- Add list of messages using knockout -->
        <div id="msgContainer">
			<div class="row" id="headings">
				<div class="col-sm-1 col-md-1 col-lg-1 ml-5 head">
					<p>Read</p>
				</div>
				<div class="col-sm-6 col-md-7 col-lg-7 ml-1 head">
					<p>Sender</p>
				</div>
				<div class="col-sm-1 col-md-2 col-lg-2 head" style="text-align:right">
					<!-- Ernesto said not to worry about sorting by date so we left it-->
					<p>Date</p>
				</div>
			</div>
			<!-- populate with conversations here -->
            <div id="convoBox" class="rounded bg-light mb-3 p-2 pl-3 " data-bind="foreach: conversations">
                <div class="convoItm" data-bind="event: {click: $parent.openConvo}">

                    <div class="col-sm-1 col-md-1 col-lg-1 ml-2 read" data-bind="text: lastMessage.isRead"></div>
                    <div class="col-sm-6 col-md-6 col-lg-7 ml-1 sender" data-bind="text: userName"></div>
                    <div class="col-sm-3 col-md-3 col-lg-3 date" data-bind="text: lastMessage.date"></div>
                    <!--<div class="col-sm-1 col-md-1 col-lg-1 time" data-bind="text: lastMessage.time"></div>-->
                    <div class="contents" data-bind="text: lastMessage.messageContent"></div>
                </div>
            </div>
        </div>

        <!-- hidden message only used if the logged in user has no conversations in their inbox -->
		<div class="rounded bg-light mb-3 p-2 pl-3 noConvoMsg" style="display: none">Your mailbox is currently empty.</div>

        <!-- Add message indicating success or failure (hidden) -->
        <p class="status"></p>

        <!-- Add error message if needed -->
        <div class="errorMsg row rounded bg-danger mb-3 p-2" id="jsonError"></div>


        <!-- Add navigation arrows that are only visible if needed -->
        <div id="pagination-holder" class="row rounded bg-light mb-3 p-2 d-none">
			<ul class="pagination justify-content-center ">
				<li class="page-item" id="prev">
					<a href="#" class="navLink" id="prevPage"><span class="fa fa-chevron-left"></span>Previous</a>
				</li>
				<li id="next" class="page-item">
					<a href="#" class="navLink" id="nextPage"><span class="fa fa-chevron-right"></span>Next</a>
				</li>
        </div>
    </div>

<script>
    $(".chosen-select").chosen();
    $(".chosen-container").addClass("m-2 ml-4 col-sm-6");

    $('#select-recipient').on('change', function () {
        $('.send-message').prop('disabled', false);
    });
</script>
{% endblock %}